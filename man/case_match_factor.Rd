% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/case_match_factor.R
\name{case_match_factor}
\alias{case_match_factor}
\title{\link[base]{factor} Return for \link[dplyr]{case_match}}
\usage{
case_match_factor(
  .x,
  ...,
  .default = NULL,
  .ptype = NULL,
  envir = parent.frame()
)
}
\arguments{
\item{.x, ..., .default, .ptype}{see \link[dplyr]{case_match}}

\item{envir}{\link[base]{environment} to \link[base]{eval}uate function \link[dplyr]{case_match}.
Default \code{parent.frame()}}
}
\value{
Function \code{\link[=case_match_factor]{case_match_factor()}} returns a \link[base]{factor}.
}
\description{
..
}
\details{
If argument \code{.default} is missing, function \link{case_match_factor} converts
the return of \link[dplyr]{case_match} into a \link[base]{factor}.
The order of \link[base]{levels} follows the order of formulas in
\link[rlang:dyn-dots]{dynamic dots} \code{...}.
}
\examples{
# from ?dplyr::case_match
x = c('a', 'b', 'a', 'd', 'b', NA, 'c', 'e')
dplyr::case_match(x, 'a' ~ 1, 'b' ~ 2, 'c' ~ 3, 'd' ~ 4)
case_match_factor(x, 'a' ~ 1, 'b' ~ 2, 'c' ~ 3, 'd' ~ 4)
case_match_factor(x, 'a' ~ 1, 'b' ~ 2, 'c' ~ 1, 'd' ~ 2)

case_match_factor(x, 'a' ~ 1, 'd' ~ 4, 'b' ~ 2, 'c' ~ 3) # order matters!

y = c(1, 2, 1, 3, 1, NA, 2, 4)
case_match_factor(y, NA ~ 0, .default = y)
}
\keyword{internal}
